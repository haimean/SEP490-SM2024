generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  HOST
  ADMIN
}

model Account {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  password          String
  role              Role                @default(USER)
  otp               String?
  otpExpired        DateTime?
  attributeCourt    AttributeCourt[]
  attributeBranches AttributeBranches[]
  user              User?
  isVerified        Boolean             @default(false)
  emailToken        String?
}

model User {
  id        Int      @id @default(autoincrement())
  account   Account  @relation(fields: [accountId], references: [id])
  accountId Int      @unique // relation scalar field (used in the `@relation` attribute above
  name      String
  dob       DateTime
}

// Key attribute cở sở sân
model AttributeKeyBranches {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  description       String?
  attributeBranches AttributeBranches[]
}

model AttributeBranches {
  id                     Int                   @id @default(autoincrement())
  value                  String
  isPublic               Boolean               @default(false)
  accountId              Int
  attributeKeyBranchesId Int
  account                Account               @relation(fields: [accountId], references: [id])
  attributeKeyBranches   AttributeKeyBranches? @relation(fields: [attributeKeyBranchesId], references: [id])

  @@unique([value, attributeKeyBranchesId])
}

// Key attribute sân
model AttributeKeyCourt {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  description    String?
  attributeCourt AttributeCourt[]
}

model AttributeCourt {
  id                  Int                @id @default(autoincrement())
  value               String
  isPublic            Boolean            @default(false)
  accountId           Int
  attributeKeyCourtId Int
  account             Account            @relation(fields: [accountId], references: [id])
  attributeKeyCourt   AttributeKeyCourt? @relation(fields: [attributeKeyCourtId], references: [id])

  @@unique([value, attributeKeyCourtId])
}
